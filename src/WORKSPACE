_workspace_name = "test"

workspace(name=_workspace_name)

load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

local_repository(
    name="com_extension_dev",
    path="/opt/nvidia/graph-composer/extension-dev",
)

# local_repository(
#     name = "system_gstreamer_headers",
#     path = "/usr/include/gstreamer-1.0",
# )

load(
    "@com_extension_dev//build:graph_extension.bzl",
    "load_extension_dev_workspace",
    "graph_nvidia_extension",
)

load_extension_dev_workspace()

git_repository(
    name = "rules_cuda",
    remote="https://github.com/bazel-contrib/rules_cuda",
    tag="v0.2.3",
)

load("@rules_cuda//cuda:repositories.bzl", "register_detected_cuda_toolchains", "rules_cuda_dependencies")
rules_cuda_dependencies()
register_detected_cuda_toolchains()

graph_nvidia_extension(
    name="NvDsInterfaceExt",
    version="1.6.0",
)

graph_nvidia_extension(
    name="NvDsBaseExt",
    version="1.6.0",
)

graph_nvidia_extension(
    name="StandardExtension",
    version="2.6.0",
)


new_git_repository(
    name="yaml-cpp",
    commit="9a3624205e8774953ef18f57067b3426c1c5ada6",
    remote="https://github.com/jbeder/yaml-cpp.git",
    build_file="@com_extension_dev//build:third_party/yaml-cpp.BUILD",
)

git_repository(
    name="rules_python",
    remote="https://github.com/bazelbuild/rules_python.git",
    tag="0.1.0",  # Use the tag corresponding to version 0.1.0
)

git_repository(
    name="magic_enum",
    remote="https://github.com/Neargye/magic_enum.git",
    tag="v0.9.3",  # Use the tag corresponding to version 0.9.3
    strip_prefix="",  # No need for strip_prefix since Git directly clones the repository
)

new_local_repository(
    name = "opencv_linux",
    path = "/usr/include",
    build_file = "@//build:third_party/opencv_linux.BUILD"
)

new_local_repository(
    name = "deepstream_lib",
    path = "/opt/nvidia/deepstream/deepstream-7.1",
    build_file = "@//build:third_party/deepstream_lib.BUILD"
)


# new_git_repository(
#     name="glib",
#     build_file="//build:third_party/glib.BUILD",
#     commit="e264e6fcf7f5199e137314b0d1ebca7648613148",
#     patch_cmds=[
#         "meson _build",
#         "ninja -C _build gobject/glib-enumtypes.h",
#     ],
#     remote="https://github.com/GNOME/glib.git",
#     shallow_since="1545145431 +0000",
# )

new_git_repository(
     name="glib",
     build_file="//build:third_party/glib.BUILD",
     commit="e264e6fcf7f5199e137314b0d1ebca7648613148",
    patch_cmds=[
        "meson setup builddir -Dprefix=$(pwd)/external",
        "ninja -C builddir install",
    ],
    remote="https://github.com/GNOME/glib.git",
    # shallow_since="1559147561 +0100",
)


# new_git_repository(
#     name="gstreamer",
#     build_file="//build:third_party/gstreamer.BUILD",
#     commit="129493687793cbc109d6211bb0e465218e383e9d",
#     patch_cmds=[
#         "./autogen.sh --noconfigure",
#         "./configure",
#         "make -C gst gstenumtypes.h",
#     ],
#     remote="https://github.com/GStreamer/gstreamer.git",
#     shallow_since="1559147561 +0100",
# )

# 1.24.2

# http_archive(
#     name = "gstreamer",
#     urls = ["https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-1.24.2.tar.xz"],
#     # sha256 = "2d8273151571fcab887cc81de48e87aeb61b5c06",  # Update with actual SHA-256
#     build_file="//build:third_party/gstreamer.BUILD",
# )

new_git_repository(
    name="gstreamer",
    build_file="//build:third_party/gstreamer.BUILD",
    commit="2d8273151571fcab887cc81de48e87aeb61b5c06",
    patch_cmds=[
        "meson setup builddir -Dprefix=$(pwd)/external",
        "ninja -C builddir install",
    ],
    remote="https://github.com/GStreamer/gstreamer.git",
    # shallow_since="1559147561 +0100",
)
